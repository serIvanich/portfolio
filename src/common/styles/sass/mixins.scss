@use 'sass:map';

@import './variables';

@mixin text($fontFamily, $fontSize) {
  font-family: $fontFamily; //'Arial', 'sans-serif'
  font-size: $fontSize;  //16px;
  line-height: 1.2;
  color: $textColor;
}

// mixin for adaptability 
@mixin max-bp($breakpoint) {
  @media (max-width: map.get($breakpoints, $breakpoint)) { 
    @content
  }
}

// adaptability settings width

@mixin adaptabilityWidth($miniWidth:95%) {
  width: 80%;
  @include max-bp('small') {
    width:90%;
    
  }
  @include max-bp('mini') {
    width: $miniWidth;
  }
}

//page block template 

@mixin templatePageBlock($backColor, $minHeight:100vh) {

  min-height: $minHeight;
  display: flex;
  // align-items: center;
  background-color: $backColor;

  
}

// page container template

@mixin templatePageContainer($flexDirection:column) {
  width: 80%;
  margin: 0 auto;
  
  display: flex;
  flex-direction: $flexDirection;
  flex-wrap: wrap;
  justify-content: space-around;
  align-items: center;
  // border-left: 1px solid;
  // border-right: 1px solid;
  padding-top: 50px;
  

  @include max-bp('strech') {
    width: 90%;
  }

  @include max-bp('mini') {
    width: 95%;
  }

}

//  template 'box for items, item-block'

@mixin itemsBox {
  width: 100%;

  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-evenly;
  padding-top: 10vh;
}

@mixin itemBlock($width) {
  min-height: 300px;
    width: $width;
    margin: 10px ;
    display: flex;
    flex-direction: column;
    align-items: center;

    @include max-bp('mini') {
      width: 250px;
      margin: 10px 0;
  }
}
